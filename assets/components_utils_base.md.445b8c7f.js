import{_ as s,o as n,c as a,R as l}from"./chunks/framework.22a162be.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"components/utils/base.md","filePath":"components/utils/base.md","lastUpdated":1755687057000}'),p={name:"components/utils/base.md"},o=[l(`<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { unref, isRef, toRaw } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { cloneDeep } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;lodash-es&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { isStringNumber, isNumber } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./types.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">example</span></span>
<span class="line"><span style="color:#E1E4E8;">  proxy.</span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast(</span><span style="color:#9ECBFF;">&#39;保存成功&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  proxy.</span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast(</span><span style="color:#9ECBFF;">&#39;保存失败&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;e&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  proxy.</span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast({</span></span>
<span class="line"><span style="color:#E1E4E8;">    message: </span><span style="color:#9ECBFF;">&#39;andy&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;warning&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast.success(</span><span style="color:#9ECBFF;">&#39;This is a success message&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { ElMessage, ElMessageBox } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;element-plus&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">export function </span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast(message, </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">: string </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">object</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;success&#39;</span><span style="color:#E1E4E8;">, otherParams: </span><span style="color:#FFAB70;">object</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  const </span><span style="color:#79B8FF;">map</span><span style="color:#E1E4E8;"> = {</span></span>
<span class="line"><span style="color:#E1E4E8;">    s: </span><span style="color:#9ECBFF;">&#39;success&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    i: </span><span style="color:#9ECBFF;">&#39;info&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    e: </span><span style="color:#9ECBFF;">&#39;error&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    w: </span><span style="color:#9ECBFF;">&#39;warning&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ElMessage.closeAll()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (getType(message) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ElMessage(message)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (getType(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ElMessage({</span></span>
<span class="line"><span style="color:#E1E4E8;">      message: message,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;success&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ElMessage({</span></span>
<span class="line"><span style="color:#E1E4E8;">    message: message,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">map</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> string] </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">otherParams,</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> Add shorthand methods </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> each </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> of message</span></span>
<span class="line"><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast.success = (message, otherParams = {}) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast(message, </span><span style="color:#9ECBFF;">&#39;success&#39;</span><span style="color:#E1E4E8;">, otherParams)</span></span>
<span class="line"><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast.info = (message, otherParams = {}) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast(message, </span><span style="color:#9ECBFF;">&#39;info&#39;</span><span style="color:#E1E4E8;">, otherParams)</span></span>
<span class="line"><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast.error = (message, otherParams = {}) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast(message, </span><span style="color:#9ECBFF;">&#39;error&#39;</span><span style="color:#E1E4E8;">, otherParams)</span></span>
<span class="line"><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast.warning = (message, otherParams = {}) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast(message, </span><span style="color:#9ECBFF;">&#39;warning&#39;</span><span style="color:#E1E4E8;">, otherParams)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">export function setStorage(storageName: string, params: </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">isSession</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> false) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  let handleParams</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (typeof params </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> typeof params </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    handleParams = params</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    handleParams = </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.stringify(params)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isSession) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    sessionStorage.setItem(storageName, handleParams)</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    localStorage.setItem(storageName, handleParams)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">export function getStorage(data, </span><span style="color:#FFAB70;">isSession</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> false) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 先获取localStorage数据, 如果没有再获取sessionStorage数据。 如果都没有， null;</span></span>
<span class="line"><span style="color:#E1E4E8;">  let getLocalData = </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  let getSessionData = </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果isSessionFirst为true, 先判断sessionStorage, 后判断localStorage</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isSession) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    getSessionData = sessionStorage.getItem(data)</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    getLocalData = localStorage.getItem(data)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (getLocalData) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (typeof </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.parse(getLocalData) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        getLocalData = </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.parse(getLocalData)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    } catch (e) {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> getLocalData</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (getSessionData) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (typeof </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.parse(getSessionData) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        getSessionData = </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.parse(getSessionData)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    } catch (e) {}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> getSessionData</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> null</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">} </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;"> 需要清空的localStorage或sessionStorage, 如果不传清空所有</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">} param1 需要排除的sessionStorage或者localStorage</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">example</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> clearStorage()</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> clearStorage(</span><span style="color:#9ECBFF;">&#39;loginId&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> clearStorage([</span><span style="color:#9ECBFF;">&#39;loginId&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;token&#39;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> clearStorage({ exclude: [</span><span style="color:#9ECBFF;">&#39;loginId&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;token&#39;</span><span style="color:#E1E4E8;">] })</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function clearStorage(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">: string </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> [] </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">object</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isEmpty(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    sessionStorage.clear()</span></span>
<span class="line"><span style="color:#E1E4E8;">    localStorage.clear()</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (notEmpty(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> getType(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    let strArr = Array.isArray(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;font-style:italic;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;"> : [</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (let i = </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> strArr.length; i</span><span style="color:#FDAEB7;font-style:italic;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      sessionStorage.removeItem(strArr[i])</span></span>
<span class="line"><span style="color:#E1E4E8;">      localStorage.removeItem(strArr[i])</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (_isObjectWithExclude(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (notEmpty(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">.exclude) </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> getType(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      let sessionStorageObj = {}</span></span>
<span class="line"><span style="color:#E1E4E8;">      let localStorageObj = {}</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (const key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">.exclude) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (Object.prototype.hasOwnProperty.call(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">.exclude, key)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          const name = </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">.exclude[key]</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (getStorage(name)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            localStorageObj[name] = getStorage(name)</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (getStorage(name, true)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            sessionStorageObj[name] = getStorage(name, true)</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      sessionStorage.clear()</span></span>
<span class="line"><span style="color:#E1E4E8;">      localStorage.clear()</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (const key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> sessionStorageObj) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        setStorage(key, sessionStorageObj[key], true)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (const key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> localStorageObj) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        setStorage(key, localStorageObj[key])</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 自定义类型守卫函数</span></span>
<span class="line"><span style="color:#E1E4E8;">function _isObjectWithExclude(obj: </span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> string </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> []): obj </span><span style="color:#F97583;">is</span><span style="color:#E1E4E8;"> { exclude: { [key: string]: string } } {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> typeof obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> obj </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;">= null </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;exclude&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> obj </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> typeof obj.exclude </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;object&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> proxy.validForm(formRef);</span></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> proxy.validForm(formRef, {showMessage: false})</span></span>
<span class="line"><span style="color:#E1E4E8;">export function validForm(ref, { message = </span><span style="color:#9ECBFF;">&#39;表单校验错误, 请检查&#39;</span><span style="color:#E1E4E8;">, detail = true, showMessage = true } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> new Promise((resolve, reject) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    unref(ref).validate((valid, status) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.log(</span><span style="color:#FDAEB7;font-style:italic;">\`</span><span style="color:#79B8FF;font-style:italic;">41</span><span style="color:#FDAEB7;font-style:italic;"> status\`</span><span style="color:#E1E4E8;">, status)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (valid) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        resolve(status)</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (message </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> showMessage) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          let errorText = Object.keys(status)</span></span>
<span class="line"><span style="color:#E1E4E8;">          let toastMessage = message</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (detail) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            toastMessage = message </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> errorText.join(</span><span style="color:#9ECBFF;">&#39;,&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast(toastMessage, </span><span style="color:#9ECBFF;">&#39;e&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        reject(status)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 判断变量是否空值</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> undefined, null, </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;   &#39;</span><span style="color:#E1E4E8;">, false, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, [], {} 均返回true，否则返回false</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function isEmpty(data: </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">): boolean {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isRef(data)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    data = unref(data)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  switch (typeof data) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    case </span><span style="color:#9ECBFF;">&#39;undefined&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> true</span></span>
<span class="line"><span style="color:#E1E4E8;">    case </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (data.trim().length </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> true</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span></span>
<span class="line"><span style="color:#E1E4E8;">    case </span><span style="color:#9ECBFF;">&#39;boolean&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">data) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> true</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span></span>
<span class="line"><span style="color:#E1E4E8;">    case </span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= data) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> true</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span></span>
<span class="line"><span style="color:#E1E4E8;">    case </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (null </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= data) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> true</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (undefined </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;">= data.length </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> data.length </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> true</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (var k </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> data) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> false</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> true</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> false</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 非空</span></span>
<span class="line"><span style="color:#E1E4E8;">export function notEmpty(v: </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">): boolean {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">isEmpty(v)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">  将两个对象合并, 以第二个对象为准, 如果两个对象, 一个属性有值, 一个没值, 合并后有值; 如果两个属性都有值, 以第二个属性为准</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function merge(obj1: </span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">, obj2: </span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">): </span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  let merged = { </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">obj1, </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">obj2 }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (let key </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> merged) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">isEmpty(obj1[key]) </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">isEmpty(obj2[key])) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      merged[key] = obj2[key]</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isEmpty(obj1[key]) </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">isEmpty(obj2[key])) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      merged[key] = obj2[key]</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">isEmpty(obj1[key]) </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> isEmpty(obj2[key])) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      merged[key] = obj1[key]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> merged</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 克隆数据并根据需要复制数组</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {</span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">} data </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 要克隆的数据</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {number} [times=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 如果是数组，要复制的次数</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">returns {</span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 克隆后的数据或复制后的数组</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> clone(</span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> clone([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, {name: </span><span style="color:#9ECBFF;">&#39;andy&#39;</span><span style="color:#E1E4E8;">}], </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, {name: </span><span style="color:#9ECBFF;">&#39;andy&#39;</span><span style="color:#E1E4E8;">}, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, {name: </span><span style="color:#9ECBFF;">&#39;andy&#39;</span><span style="color:#E1E4E8;">}]</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function clone(data, </span><span style="color:#FFAB70;">times</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isRef(data)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    data = unref(data)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> Check </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> the data </span><span style="color:#F97583;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> an array</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (getType(data) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;array&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> If </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> an array, </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> a deep clone of the data</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> cloneDeep(data)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  const clonedData = cloneDeep(data)</span></span>
<span class="line"><span style="color:#E1E4E8;">  const result = []</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (let i = </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> times; i</span><span style="color:#FDAEB7;font-style:italic;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    result.push(</span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">clonedData)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 格式化时间为年月日时分秒的格式， 格式可以自定义。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> ① 时间戳10位和13位都可以转换成格式化的日期</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> ② java8格式的日期和有效的日期都可以转换成定义的日期格式</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {Date, string}  都有默认参数</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">example</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> formatTime() </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2020</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">7</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">9</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">53</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">7</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> formatTime(</span><span style="color:#9ECBFF;">&#39;2018-02-13T06:17&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2018</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">2</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">6</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">00</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> formatTime(</span><span style="color:#9ECBFF;">&#39;2020/03/02 06:02&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2020</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">3</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">6</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">2</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">00</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> formatTime(</span><span style="color:#79B8FF;">1541927611000</span><span style="color:#E1E4E8;">); </span><span style="color:#F97583;">//</span><span style="color:#79B8FF;">2018</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">11</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">21</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> formatTime(</span><span style="color:#79B8FF;">1541927611000</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{y}</span><span style="color:#9ECBFF;">年</span><span style="color:#79B8FF;">{m}</span><span style="color:#9ECBFF;">月</span><span style="color:#79B8FF;">{d}</span><span style="color:#9ECBFF;">日 </span><span style="color:#79B8FF;">{h}</span><span style="color:#9ECBFF;">时</span><span style="color:#79B8FF;">{m}</span><span style="color:#9ECBFF;">分</span><span style="color:#79B8FF;">{s}</span><span style="color:#9ECBFF;">秒&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">2018年11月11日</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">17时11分31秒</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> formatTime(</span><span style="color:#79B8FF;">1541927611</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{y}</span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">{m}</span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">{d}</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">{h}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{m}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{s}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2018</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">11</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">31</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> formatTime(new Date()); </span><span style="color:#F97583;">//</span><span style="color:#79B8FF;">2018</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">11</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">21</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> formatTime(new Date().getTime()); </span><span style="color:#F97583;">//</span><span style="color:#79B8FF;">2018</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">11</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">21</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function formatTime(time, </span><span style="color:#FFAB70;">cFormat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">{y}</span><span style="color:#9ECBFF;">-</span><span style="color:#79B8FF;">{m}</span><span style="color:#9ECBFF;">-</span><span style="color:#79B8FF;">{d}</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">{h}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{i}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{s}</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">time) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> time</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  let date</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (typeof time </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    date = time</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ((</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> time).length </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">) time = parseInt(time) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span></span>
<span class="line"><span style="color:#E1E4E8;">    date = new Date(time)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  const formatObj = {</span></span>
<span class="line"><span style="color:#E1E4E8;">    y: date.getFullYear(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    m: date.getMonth() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    d: date.getDate(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    h: date.getHours(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    i: date.getMinutes(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    s: date.getSeconds(),</span></span>
<span class="line"><span style="color:#E1E4E8;">    a: date.getDay(),</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  const time_str = cFormat.replace(</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">{(y</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">m</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">d</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">i</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">a)</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">g, (result, key) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    let value = formatObj[key] </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> Note: getDay() returns </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> on Sunday</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (key </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      return [</span><span style="color:#9ECBFF;">&#39;日&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;一&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;二&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;三&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;四&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;五&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;六&#39;</span><span style="color:#E1E4E8;">][value]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (result.length </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      value = </span><span style="color:#9ECBFF;">&#39;0&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> value</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> time_str</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 生成 </span><span style="color:#79B8FF;">UUID</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {string} [</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 生成 </span><span style="color:#79B8FF;">UUID</span><span style="color:#E1E4E8;"> 的类型，可以是 </span><span style="color:#9ECBFF;">&#39;phone&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;time&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;"> 或空字符串</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {number} [length=</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 生成字符串的长度</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {</span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">} [options={}] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 额外的选项</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {string} [options.emailStr=</span><span style="color:#9ECBFF;">&#39;@qq.com&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 生成 email 时使用的后缀</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {string} [options.timeStr=</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">{m}</span><span style="color:#9ECBFF;">-</span><span style="color:#79B8FF;">{d}</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">{h}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{i}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{s}</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 生成时间字符串的格式</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {string} [options.startStr=</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 起始字符串</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {number</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">null} [options.optionsIndex=null] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 数组索引</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">returns {string</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">number} </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> 生成的 </span><span style="color:#79B8FF;">UUID</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> uuid(</span><span style="color:#9ECBFF;">&quot;名字&quot;</span><span style="color:#E1E4E8;">) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> 名字hc8f</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> uuid() =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> abcd</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> uuid(</span><span style="color:#9ECBFF;">&#39;time&#39;</span><span style="color:#E1E4E8;">) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">25MR</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">34</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">1</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> uuid(</span><span style="color:#9ECBFF;">&#39;time&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, {startStr:</span><span style="color:#9ECBFF;">&#39;andy&#39;</span><span style="color:#E1E4E8;">, timeStr:</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{h}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{i}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{s}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">}) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> andy </span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">38</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">23</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> uuid(</span><span style="color:#9ECBFF;">&#39;phone&#39;</span><span style="color:#E1E4E8;">) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">13603312460</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> uuid(</span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> cBZA</span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">qq.com</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> uuid(</span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2319</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> uuid([ { label: </span><span style="color:#9ECBFF;">&quot;小泽泽&quot;</span><span style="color:#E1E4E8;">, value: </span><span style="color:#9ECBFF;">&quot;xzz&quot;</span><span style="color:#E1E4E8;"> },{ label: </span><span style="color:#9ECBFF;">&quot;小月月&quot;</span><span style="color:#E1E4E8;">, value: </span><span style="color:#9ECBFF;">&quot;xyy&quot;</span><span style="color:#E1E4E8;"> }]) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> xzz</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">export function uuid(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  { emailStr = </span><span style="color:#9ECBFF;">&#39;@qq.com&#39;</span><span style="color:#E1E4E8;">, timeStr = </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">{m}</span><span style="color:#9ECBFF;">-</span><span style="color:#79B8FF;">{d}</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">{h}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{i}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{s}</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">, startStr = </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">, optionsIndex = null } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {},</span></span>
<span class="line"><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  let randomStr = </span><span style="color:#9ECBFF;">&#39;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  let res = </span><span style="color:#79B8FF;">type</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isRef(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> = unref(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果传的第一个参数的数组， 说明是下拉框。 下拉框获取的是数组的第一项的值</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (getType(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;array&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">.length </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    let randNum = random(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">.length </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果length传空, 说明数组里是基本数据类型, 那直接返回数组里的值</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">length) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> type[optionsIndex </span><span style="color:#FDAEB7;font-style:italic;">??</span><span style="color:#E1E4E8;"> randNum]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 否则返回数组里对象里的值</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> type[optionsIndex </span><span style="color:#FDAEB7;font-style:italic;">??</span><span style="color:#E1E4E8;"> randNum][length </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;value&#39;</span><span style="color:#E1E4E8;"> : length]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果是手机号, 生成随机手机号</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;phone&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    let prefixArray = new Array(</span><span style="color:#9ECBFF;">&#39;130&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;131&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;132&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;133&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;135&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;136&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;137&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;138&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;170&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;187&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;189&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    let i = parseInt(Math.random() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    let res = prefixArray[i]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (var j = </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; j </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">; j</span><span style="color:#FDAEB7;font-style:italic;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      res </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">= Math.floor(Math.random() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果是email, 生成随机email</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;email&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> uuid(startStr, length) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> emailStr</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果是时间, 生成时间字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;time&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> uuid(startStr, length) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39; &#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> formatTime(new Date(), timeStr)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果是数字, 生成除了0的随机数字</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    let randomStr = </span><span style="color:#9ECBFF;">&#39;123456789&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    let res = </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (let i = length; i </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; </span><span style="color:#FDAEB7;font-style:italic;">--</span><span style="color:#E1E4E8;">i) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      res </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">= randomStr[Math.floor(Math.random() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> randomStr.length)]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Number(res)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 生成随机字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (let i = length; i </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; </span><span style="color:#FDAEB7;font-style:italic;">--</span><span style="color:#E1E4E8;">i) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    res </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">= randomStr[Math.floor(Math.random() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> randomStr.length)]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 判断传入参数的类型</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param {</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">} </span><span style="color:#79B8FF;">type</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> getType(new RegExp()) regexp</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> getType(new Date()) date</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> getType([]) array</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> getType({}) </span><span style="color:#79B8FF;">object</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> getType(null) null</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> getType(</span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">) number</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function getType(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (typeof </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    const objType = Object.prototype.toString.call(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">).slice(</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">).toLowerCase()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> objType</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> typeof </span><span style="color:#79B8FF;">type</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">export function sleep(</span><span style="color:#FFAB70;">delay</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, fn) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> new Promise((resolve) </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    setTimeout(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      fn </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> fn()</span></span>
<span class="line"><span style="color:#E1E4E8;">      resolve()</span></span>
<span class="line"><span style="color:#E1E4E8;">    }, delay),</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">使用方式</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">. 在el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">form中使用</span></span>
<span class="line"><span style="color:#E1E4E8;">name: [ proxy.validate(</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">, { message: </span><span style="color:#9ECBFF;">&#39;你干嘛哈哈&#39;</span><span style="color:#E1E4E8;"> })],</span></span>
<span class="line"><span style="color:#E1E4E8;">between: [ proxy.validate(</span><span style="color:#9ECBFF;">&#39;between&#39;</span><span style="color:#E1E4E8;">, { </span><span style="color:#79B8FF;">max</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">99</span><span style="color:#E1E4E8;"> })],</span></span>
<span class="line"><span style="color:#E1E4E8;">number: [ proxy.validate(</span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">)],</span></span>
<span class="line"><span style="color:#E1E4E8;">length: [proxy.validate(</span><span style="color:#9ECBFF;">&#39;length&#39;</span><span style="color:#E1E4E8;">)],</span></span>
<span class="line"><span style="color:#E1E4E8;">phone: [ proxy.validate(</span><span style="color:#9ECBFF;">&#39;phone&#39;</span><span style="color:#E1E4E8;">)],</span></span>
<span class="line"><span style="color:#E1E4E8;">custom: [proxy.validate(</span><span style="color:#9ECBFF;">&#39;custom&#39;</span><span style="color:#E1E4E8;">, { message: </span><span style="color:#9ECBFF;">&#39;最多保留2位小数&#39;</span><span style="color:#E1E4E8;">, reg: </span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">\\</span><span style="color:#FDAEB7;font-style:italic;">d+\\.?\\d{0,2}$/ })]</span></span>
<span class="line"><span style="color:#E1E4E8;">confirmRegPwd: [</span></span>
<span class="line"><span style="color:#E1E4E8;">  proxy.validate(</span><span style="color:#9ECBFF;">&#39;same&#39;</span><span style="color:#E1E4E8;">, { value: toRef(form.value, </span><span style="color:#9ECBFF;">&#39;regPwd&#39;</span><span style="color:#E1E4E8;">) }),</span></span>
<span class="line"><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">. 在函数中使用, 返回boolean</span></span>
<span class="line"><span style="color:#E1E4E8;"> let ip = proxy.validate(</span><span style="color:#9ECBFF;">&#39;ip&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">122322</span><span style="color:#E1E4E8;">, true)</span></span>
<span class="line"><span style="color:#E1E4E8;"> let custom = proxy.validate(</span><span style="color:#9ECBFF;">&#39;custom&#39;</span><span style="color:#E1E4E8;">, { value: </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">, reg: </span><span style="color:#F97583;">/^-</span><span style="color:#E1E4E8;">\\</span><span style="color:#FDAEB7;font-style:italic;">d+\\.?\\d{0,2}$/ }, true)</span></span>
<span class="line"><span style="color:#F97583;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">export function validate(</span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;required&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">rules</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}, </span><span style="color:#FFAB70;">pureValid</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> false) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  let trigger = rules.trigger </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;blur&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;change&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  const typeMaps = [</span><span style="color:#9ECBFF;">&#39;required&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;pwd&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;mobile&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;between&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;same&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;length&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;ip&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;port&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;custom&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果不包含typeMaps中的类型, 直接将第一个参数作为message</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">typeMaps.includes(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      required: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">      message: </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      trigger: trigger,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;required&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      required: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">      message: rules.message </span><span style="color:#FDAEB7;font-style:italic;">??</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;请输入 &#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      trigger: trigger,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> validator: this.validateName,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;pwd&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    const validateName = (rule, value, callback) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      let validFlag = </span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">(</span><span style="color:#FDAEB7;font-style:italic;">?!</span><span style="color:#E1E4E8;">_)(</span><span style="color:#FDAEB7;font-style:italic;">?</span><span style="color:#E1E4E8;">!.</span><span style="color:#F97583;">*</span><span style="color:#FDAEB7;font-style:italic;">?</span><span style="color:#E1E4E8;">_</span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">)[a</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">zA</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Z0</span><span style="color:#F97583;">-</span><span style="color:#FDAEB7;font-style:italic;">9_</span><span style="color:#E1E4E8;">\\</span><span style="color:#FDAEB7;font-style:italic;">u4e00-\\u9fa5]+$/.test(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">validFlag) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        callback(new Error(rules.message </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;密码需由中文、英文、数字、下划线组成，且不能以下划线开头和结尾&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        callback()</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      validator: validateName,</span></span>
<span class="line"><span style="color:#E1E4E8;">      trigger: trigger,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> _validValue(rules, </span><span style="color:#9ECBFF;">&#39;请输入正整数&#39;</span><span style="color:#E1E4E8;">, pureValid, </span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">+</span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;mobile&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> _validValue(rules, </span><span style="color:#9ECBFF;">&#39;请输入正确的手机号&#39;</span><span style="color:#E1E4E8;">, pureValid, </span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]{</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;ip&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> _validValue(</span></span>
<span class="line"><span style="color:#E1E4E8;">      rules,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&#39;请输入正确的ip地址&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      pureValid,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">((</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#E1E4E8;">]</span><span style="color:#FDAEB7;font-style:italic;">?</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]</span><span style="color:#FDAEB7;font-style:italic;">?</span><span style="color:#E1E4E8;">)\\</span><span style="color:#FDAEB7;font-style:italic;">.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;port&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> _validValue(</span></span>
<span class="line"><span style="color:#E1E4E8;">      rules,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&#39;请输入1-65535的端口号&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      pureValid,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]{</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]{</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">}</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">])</span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;between&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    let </span><span style="color:#79B8FF;">min</span><span style="color:#E1E4E8;"> = rules.min </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    let </span><span style="color:#79B8FF;">max</span><span style="color:#E1E4E8;"> = rules.max </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">    const validateBetween = (rule, value, callback) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      let validFlag = </span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">+</span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">.test(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">validFlag) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        callback(new Error(</span><span style="color:#9ECBFF;">&#39;请输入数字&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (value </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">min</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        callback(new Error(</span><span style="color:#FDAEB7;font-style:italic;">\`数字不能小于\${</span><span style="color:#79B8FF;font-style:italic;">min</span><span style="color:#FDAEB7;font-style:italic;">}\`</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (value </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">max</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        callback(new Error(</span><span style="color:#FDAEB7;font-style:italic;">\`数字不能大于\${</span><span style="color:#79B8FF;font-style:italic;">max</span><span style="color:#FDAEB7;font-style:italic;">}\`</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      callback()</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      validator: validateBetween,</span></span>
<span class="line"><span style="color:#E1E4E8;">      trigger: trigger,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;same&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    const validateSame = (rule, value, callback) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      let isSame = value </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= rules.value.value</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">isSame) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        const errMessage = rules.message </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;密码和确认密码要一致&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">        callback(new Error(errMessage))</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      callback()</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      validator: validateSame,</span></span>
<span class="line"><span style="color:#E1E4E8;">      trigger: trigger,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;custom&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;">  _validValue(rules, </span><span style="color:#9ECBFF;">&#39;请输入正确的手机号&#39;</span><span style="color:#E1E4E8;">, pureValid, </span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]{</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">}</span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pureValid) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> _validValue(rules.value, rules.message, pureValid, rules.reg)</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> _validValue(rules, rules.message, pureValid, rules.reg)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">function _validValue(rules, msg, pureValid, reg) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pureValid </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= true) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> reg.test(rules)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  const validatePhone = (rule, value, callback) =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.log(</span><span style="color:#FDAEB7;font-style:italic;">\`</span><span style="color:#79B8FF;font-style:italic;">54</span><span style="color:#FDAEB7;font-style:italic;"> reg\`</span><span style="color:#E1E4E8;">, reg)</span></span>
<span class="line"><span style="color:#E1E4E8;">    let validFlag = reg.test(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">validFlag) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      callback(new Error(rules.message </span><span style="color:#FDAEB7;font-style:italic;">??</span><span style="color:#E1E4E8;"> msg))</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      callback()</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    validator: validatePhone,</span></span>
<span class="line"><span style="color:#E1E4E8;">    required: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">    trigger: rules.trigger </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;blur&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;change&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;">const { res, err } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> proxy.asyncWrapper(listTests, pickForm);</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> function asyncWrapper(func, </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">args) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    const res = </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> func(</span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">args)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> { res }</span></span>
<span class="line"><span style="color:#E1E4E8;">  } catch (err) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> { err }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 获取assets静态资源</span></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> let </span><span style="color:#FFAB70;">src</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> proxy.formatImg(</span><span style="color:#9ECBFF;">&#39;1.png&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">export function formatImg(photoName) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (photoName.startsWith(</span><span style="color:#9ECBFF;">&#39;http&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> photoName</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (photoName.indexOf(</span><span style="color:#9ECBFF;">&#39;.&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    photoName = photoName </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;.png&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> new URL(</span><span style="color:#FDAEB7;font-style:italic;">\`..</span><span style="color:#F97583;font-style:italic;">/</span><span style="color:#FDAEB7;font-style:italic;">assets</span><span style="color:#F97583;font-style:italic;">/</span><span style="color:#FDAEB7;font-style:italic;">images</span><span style="color:#F97583;font-style:italic;">/</span><span style="color:#FDAEB7;font-style:italic;">\${photoName}\`</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;">.meta.url).href</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 复制文本</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> copy(</span><span style="color:#9ECBFF;">&#39;这是要复制的文本&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> copy(</span><span style="color:#9ECBFF;">&#39;这是要复制的文本&#39;</span><span style="color:#E1E4E8;">, {duration: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export const </span><span style="color:#FFAB70;">copy</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (text, </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">toastParams) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  const textarea = document.createElement(</span><span style="color:#9ECBFF;">&#39;textarea&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  textarea.value = text</span></span>
<span class="line"><span style="color:#E1E4E8;">  textarea.style.position = </span><span style="color:#9ECBFF;">&#39;fixed&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  document.body.appendChild(textarea)</span></span>
<span class="line"><span style="color:#E1E4E8;">  textarea.select()</span></span>
<span class="line"><span style="color:#E1E4E8;">  document.execCommand(</span><span style="color:#9ECBFF;">&#39;copy&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  document.body.removeChild(textarea)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">toastParams.hideToast) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">$</span><span style="color:#E1E4E8;">toast(text </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;复制成功&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">toastParams)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 给数字加千分位</span></span>
<span class="line"><span style="color:#E1E4E8;">export function formatThousands(number) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 提取数字部分和单位部分</span></span>
<span class="line"><span style="color:#E1E4E8;">  let matches = (</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> number).match(</span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">([\\</span><span style="color:#FDAEB7;font-style:italic;">d,]+)(\\D+)?$/)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">matches) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> number </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果没有找到匹配，则返回原始输入</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  let numericString = matches[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">].replace(</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">\\</span><span style="color:#FDAEB7;font-style:italic;">D/g, &#39;&#39;) // 仅保留数字</span></span>
<span class="line"><span style="color:#E1E4E8;">  let </span><span style="color:#FFAB70;">unit</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> matches[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">] </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 单位部分，如果没有则为空字符串</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 添加千位分隔符</span></span>
<span class="line"><span style="color:#E1E4E8;">  let </span><span style="color:#FFAB70;">numberWithSeparator</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> numericString.replace(</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">\\</span><span style="color:#FDAEB7;font-style:italic;">B(?=(\\d{3})+(?!\\d))/g, &#39;,&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 拼接数字和单位，并返回结果</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> numberWithSeparator </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> unit</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/*</span></span>
<span class="line"><span style="color:#E1E4E8;">const </span><span style="color:#FFAB70;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ref(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">proxy.log(</span><span style="color:#FDAEB7;font-style:italic;">\`</span><span style="color:#79B8FF;font-style:italic;">str</span><span style="color:#FDAEB7;font-style:italic;">\`</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;5行 test/t3.vue&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function log(variableStr, variable, </span><span style="color:#FFAB70;">otherInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isRef(variable)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    let unrefVariable = unref(variable)</span></span>
<span class="line"><span style="color:#E1E4E8;">    _log(toRaw(unrefVariable))</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _log(variable)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  function _log(consoleData) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (getType(consoleData) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> getType(consoleData) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;array&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.log(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FDAEB7;font-style:italic;">\`</span><span style="color:#F97583;font-style:italic;">%</span><span style="color:#FDAEB7;font-style:italic;">c\${variableStr} \${otherInfo}\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;background:#fff; color: blue;font-size: 1.2em&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.stringify(consoleData, null, </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">      )</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.log(</span><span style="color:#FDAEB7;font-style:italic;">\`</span><span style="color:#F97583;font-style:italic;">%</span><span style="color:#FDAEB7;font-style:italic;">c\${variableStr} \${otherInfo}\`</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;background:#fff; color: blue;font-size: 1.2em&#39;</span><span style="color:#E1E4E8;">, consoleData)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  function getType(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (typeof </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;object&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      const objType = Object.prototype.toString.call(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">).slice(</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">).toLowerCase()</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> objType</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> typeof </span><span style="color:#79B8FF;">type</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 生成指定范围内的随机整数</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param </span><span style="color:#79B8FF;">min</span><span style="color:#E1E4E8;"> 最小值，默认为0</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param </span><span style="color:#79B8FF;">max</span><span style="color:#E1E4E8;"> 最大值，默认为10</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">returns 返回生成的随机整数</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function random(</span><span style="color:#FFAB70;">min</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Math.floor(Math.random() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">min</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">min</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 将文本转换为带有连接符的行文本</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param text 要转换的文本</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">param connect 连接符，默认为</span><span style="color:#9ECBFF;">&#39;-&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">@</span><span style="color:#E1E4E8;">returns 返回转换后的行文本</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> toLine(</span><span style="color:#9ECBFF;">&#39;NameAndy&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">andy</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> toLine(</span><span style="color:#9ECBFF;">&#39;nameAndy&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">andy</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> toLine(</span><span style="color:#9ECBFF;">&#39;_nameAndy&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> _name</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">andy</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function toLine(text, </span><span style="color:#FFAB70;">connect</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;-&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  let translateText = text</span></span>
<span class="line"><span style="color:#E1E4E8;">    .replace(</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">([A</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Z])</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">g, (match, p1, offset, origin) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (offset </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">\`\${match.toLocaleLowerCase()}\`</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">\`\${connect}\${match.toLocaleLowerCase()}\`</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">    .toLocaleLowerCase()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> translateText</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> console.log(processWidth(</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> { width: </span><span style="color:#9ECBFF;">&#39;200px&#39;</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> console.log(processWidth(</span><span style="color:#9ECBFF;">&#39;200&#39;</span><span style="color:#E1E4E8;">, true)) </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">200px</span></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> console.log(processWidth(</span><span style="color:#9ECBFF;">&#39;200.33px&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> { width: </span><span style="color:#9ECBFF;">&#39;200.33px&#39;</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> console.log(processWidth(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#E1E4E8;">export function processWidth(initValue, </span><span style="color:#FFAB70;">isBase</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> false) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  let value = unref(initValue)</span></span>
<span class="line"><span style="color:#E1E4E8;">  let res = </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> isBase </span><span style="color:#FDAEB7;font-style:italic;">?</span><span style="color:#E1E4E8;"> value : {}</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (typeof value </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;number&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    value = String(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (value </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> isBase </span><span style="color:#FDAEB7;font-style:italic;">?</span><span style="color:#E1E4E8;"> value : {}</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (typeof value </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">isNaN(value)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    res = value </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;px&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (typeof value </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">= </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">(\\</span><span style="color:#FDAEB7;font-style:italic;">.[0-9]+)?(px|%|em|rem|vw|vh|ch)*$/.test(value)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    res = value</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.warn(</span><span style="color:#FDAEB7;font-style:italic;">\`\${value} </span><span style="color:#F97583;font-style:italic;">is</span><span style="color:#FDAEB7;font-style:italic;"> Invalid unit provided\`</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isBase) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> { width: res }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 只有对正整数或者字符串正整数才进行单位的转换,</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 否则返回原始数据</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function formatBytes(</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isStringNumber(</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> isNumber(</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;"> = Number(</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bytes</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bytes</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  const k = </span><span style="color:#79B8FF;">1024</span></span>
<span class="line"><span style="color:#E1E4E8;">  const sizes = [</span><span style="color:#9ECBFF;">&#39;B&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;KB&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;MB&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;GB&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;TB&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;PB&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;EB&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;ZB&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;YB&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  const i = Math.floor(Math.log(</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> Math.log(k))</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> parseFloat((</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> Math.pow(k, i)).toFixed(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39; &#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> sizes[i]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">export function formatBytesConvert(</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isStringNumber(</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">) </span><span style="color:#FDAEB7;font-style:italic;">||</span><span style="color:#E1E4E8;"> isNumber(</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bytes</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bytes</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  const bytesRegex = </span><span style="color:#F97583;">/^</span><span style="color:#E1E4E8;">(\\</span><span style="color:#FDAEB7;font-style:italic;">d+(?:\\.\\d+)?)\\s*([BKMGTPEZY]?B)$/i</span></span>
<span class="line"><span style="color:#E1E4E8;">  const units = {</span></span>
<span class="line"><span style="color:#E1E4E8;">    B: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">KB</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">MB</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">GB</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">TB</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">PB</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">EB</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">ZB</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">YB</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  const match = </span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;">.match(bytesRegex)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">match) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.warn(</span><span style="color:#9ECBFF;">&quot;Invalid bytes format. Please provide a valid bytes string, like &#39;100GB&#39;.&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  const size = parseFloat(match[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">  const unit = match[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">].toUpperCase()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#E1E4E8;">units.hasOwnProperty(unit)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.warn(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;Invalid bytes unit. Please provide a valid unit, like &#39;B&#39;, &#39;KB&#39;, &#39;MB&#39;, &#39;GB&#39;, &#39;TB&#39;, &#39;PB&#39;, &#39;EB&#39;, &#39;ZB&#39;, or &#39;YB&#39;.&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> size </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> units[unit]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">export function throttle(fn, </span><span style="color:#FFAB70;">delay</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> last为上一次触发毁掉的时间，timer是定时器</span></span>
<span class="line"><span style="color:#E1E4E8;">  let last = </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">  let timer = null</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 将throttle处理结果当做函数返回</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> function () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 保留调用时的this上下文</span></span>
<span class="line"><span style="color:#E1E4E8;">    let context = this</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 保留调用时传入的参数</span></span>
<span class="line"><span style="color:#E1E4E8;">    let args = arguments</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 记录本次触发回调的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    let now = </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">new Date()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 判断上次触发的时间和本次触发的时间差是否小于时间间隔的阈值</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (now </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> last </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> delay) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果时间间隔小于设定的时间间隔阈值,则为本次触发操作设立一个新的定时器</span></span>
<span class="line"><span style="color:#E1E4E8;">      clearTimeout(timer)</span></span>
<span class="line"><span style="color:#E1E4E8;">      timer = setTimeout(function () {</span></span>
<span class="line"><span style="color:#E1E4E8;">        last = now</span></span>
<span class="line"><span style="color:#E1E4E8;">        fn.apply(context, args)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }, delay)</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;"> 如果时间间隔超出了设定的时间间隔阈值，那就不等了，无论如何要反馈给用户一次响应</span></span>
<span class="line"><span style="color:#E1E4E8;">      last = now</span></span>
<span class="line"><span style="color:#E1E4E8;">      fn.apply(context, args)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">export function debounce(fn, </span><span style="color:#FFAB70;">delay</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  let timer = null</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> function () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (timer) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      clearTimeout(timer)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    timer = setTimeout(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      fn.apply(this, arguments)</span></span>
<span class="line"><span style="color:#E1E4E8;">      timer = null</span></span>
<span class="line"><span style="color:#E1E4E8;">    }, delay)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/**</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> proxy.confirm(</span><span style="color:#9ECBFF;">&#39;内容&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> proxy.confirm(</span><span style="color:#9ECBFF;">&#39;哈哈&#39;</span><span style="color:#E1E4E8;">, { icon: </span><span style="color:#9ECBFF;">&#39;el-icon-plus&#39;</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> close</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">on</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">click</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">modal: 是否可通过点击遮罩层关闭 MessageBox 默认true</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> lock</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">scroll: 是否在 MessageBox 出现时将 body 滚动锁定. 默认true</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;">export function confirm(message, options) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  const baseOptions = {</span></span>
<span class="line"><span style="color:#E1E4E8;">    title: </span><span style="color:#9ECBFF;">&#39;提示&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    draggable: true,</span></span>
<span class="line"><span style="color:#E1E4E8;">    showCancelButton: false,</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  let mergeOptions = Object.assign({}, baseOptions, options)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> new Promise((r, j) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ElMessageBox.confirm(message, mergeOptions)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .then(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        r()</span></span>
<span class="line"><span style="color:#E1E4E8;">      })</span></span>
<span class="line"><span style="color:#E1E4E8;">      .catch(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        j()</span></span>
<span class="line"><span style="color:#E1E4E8;">      })</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { unref, isRef, toRaw } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { cloneDeep } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;lodash-es&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { isStringNumber, isNumber } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./types.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">example</span></span>
<span class="line"><span style="color:#24292E;">  proxy.</span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast(</span><span style="color:#032F62;">&#39;保存成功&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  proxy.</span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast(</span><span style="color:#032F62;">&#39;保存失败&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;e&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  proxy.</span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast({</span></span>
<span class="line"><span style="color:#24292E;">    message: </span><span style="color:#032F62;">&#39;andy&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;warning&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast.success(</span><span style="color:#032F62;">&#39;This is a success message&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { ElMessage, ElMessageBox } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;element-plus&#39;</span></span>
<span class="line"><span style="color:#24292E;">export function </span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast(message, </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">: string </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">object</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;success&#39;</span><span style="color:#24292E;">, otherParams: </span><span style="color:#E36209;">object</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}) {</span></span>
<span class="line"><span style="color:#24292E;">  const </span><span style="color:#005CC5;">map</span><span style="color:#24292E;"> = {</span></span>
<span class="line"><span style="color:#24292E;">    s: </span><span style="color:#032F62;">&#39;success&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    i: </span><span style="color:#032F62;">&#39;info&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    e: </span><span style="color:#032F62;">&#39;error&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    w: </span><span style="color:#032F62;">&#39;warning&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  ElMessage.closeAll()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (getType(message) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    ElMessage(message)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (getType(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    ElMessage({</span></span>
<span class="line"><span style="color:#24292E;">      message: message,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;success&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">object</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  ElMessage({</span></span>
<span class="line"><span style="color:#24292E;">    message: message,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">map</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> string] </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">otherParams,</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> Add shorthand methods </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> each </span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> of message</span></span>
<span class="line"><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast.success = (message, otherParams = {}) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast(message, </span><span style="color:#032F62;">&#39;success&#39;</span><span style="color:#24292E;">, otherParams)</span></span>
<span class="line"><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast.info = (message, otherParams = {}) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast(message, </span><span style="color:#032F62;">&#39;info&#39;</span><span style="color:#24292E;">, otherParams)</span></span>
<span class="line"><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast.error = (message, otherParams = {}) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast(message, </span><span style="color:#032F62;">&#39;error&#39;</span><span style="color:#24292E;">, otherParams)</span></span>
<span class="line"><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast.warning = (message, otherParams = {}) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast(message, </span><span style="color:#032F62;">&#39;warning&#39;</span><span style="color:#24292E;">, otherParams)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">export function setStorage(storageName: string, params: </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">, </span><span style="color:#E36209;">isSession</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> false) {</span></span>
<span class="line"><span style="color:#24292E;">  let handleParams</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (typeof params </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> typeof params </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;string&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    handleParams = params</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    handleParams = </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.stringify(params)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isSession) {</span></span>
<span class="line"><span style="color:#24292E;">    sessionStorage.setItem(storageName, handleParams)</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    localStorage.setItem(storageName, handleParams)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">export function getStorage(data, </span><span style="color:#E36209;">isSession</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> false) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 先获取localStorage数据, 如果没有再获取sessionStorage数据。 如果都没有， null;</span></span>
<span class="line"><span style="color:#24292E;">  let getLocalData = </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">  let getSessionData = </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果isSessionFirst为true, 先判断sessionStorage, 后判断localStorage</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isSession) {</span></span>
<span class="line"><span style="color:#24292E;">    getSessionData = sessionStorage.getItem(data)</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    getLocalData = localStorage.getItem(data)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (getLocalData) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (typeof </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.parse(getLocalData) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        getLocalData = </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.parse(getLocalData)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    } catch (e) {}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> getLocalData</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (getSessionData) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (typeof </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.parse(getSessionData) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        getSessionData = </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.parse(getSessionData)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    } catch (e) {}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> getSessionData</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> null</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">} </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> 需要清空的localStorage或sessionStorage, 如果不传清空所有</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">} param1 需要排除的sessionStorage或者localStorage</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">example</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> clearStorage()</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> clearStorage(</span><span style="color:#032F62;">&#39;loginId&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> clearStorage([</span><span style="color:#032F62;">&#39;loginId&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;token&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> clearStorage({ exclude: [</span><span style="color:#032F62;">&#39;loginId&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;token&#39;</span><span style="color:#24292E;">] })</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function clearStorage(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">: string </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> [] </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#E36209;">object</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isEmpty(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    sessionStorage.clear()</span></span>
<span class="line"><span style="color:#24292E;">    localStorage.clear()</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (notEmpty(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">) </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> getType(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    let strArr = Array.isArray(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">) </span><span style="color:#B31D28;font-style:italic;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> : [</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (let i = </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> strArr.length; i</span><span style="color:#B31D28;font-style:italic;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      sessionStorage.removeItem(strArr[i])</span></span>
<span class="line"><span style="color:#24292E;">      localStorage.removeItem(strArr[i])</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (_isObjectWithExclude(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (notEmpty(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">.exclude) </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> getType(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      let sessionStorageObj = {}</span></span>
<span class="line"><span style="color:#24292E;">      let localStorageObj = {}</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (const key </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">.exclude) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (Object.prototype.hasOwnProperty.call(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">.exclude, key)) {</span></span>
<span class="line"><span style="color:#24292E;">          const name = </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">.exclude[key]</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (getStorage(name)) {</span></span>
<span class="line"><span style="color:#24292E;">            localStorageObj[name] = getStorage(name)</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (getStorage(name, true)) {</span></span>
<span class="line"><span style="color:#24292E;">            sessionStorageObj[name] = getStorage(name, true)</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      sessionStorage.clear()</span></span>
<span class="line"><span style="color:#24292E;">      localStorage.clear()</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (const key </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> sessionStorageObj) {</span></span>
<span class="line"><span style="color:#24292E;">        setStorage(key, sessionStorageObj[key], true)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (const key </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> localStorageObj) {</span></span>
<span class="line"><span style="color:#24292E;">        setStorage(key, localStorageObj[key])</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 自定义类型守卫函数</span></span>
<span class="line"><span style="color:#24292E;">function _isObjectWithExclude(obj: </span><span style="color:#005CC5;">object</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> string </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> []): obj </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> { exclude: { [key: string]: string } } {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> typeof obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">= null </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;exclude&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> obj </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> typeof obj.exclude </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;object&#39;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> proxy.validForm(formRef);</span></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> proxy.validForm(formRef, {showMessage: false})</span></span>
<span class="line"><span style="color:#24292E;">export function validForm(ref, { message = </span><span style="color:#032F62;">&#39;表单校验错误, 请检查&#39;</span><span style="color:#24292E;">, detail = true, showMessage = true } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> new Promise((resolve, reject) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    unref(ref).validate((valid, status) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      console.log(</span><span style="color:#B31D28;font-style:italic;">\`</span><span style="color:#005CC5;font-style:italic;">41</span><span style="color:#B31D28;font-style:italic;"> status\`</span><span style="color:#24292E;">, status)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (valid) {</span></span>
<span class="line"><span style="color:#24292E;">        resolve(status)</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (message </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> showMessage) {</span></span>
<span class="line"><span style="color:#24292E;">          let errorText = Object.keys(status)</span></span>
<span class="line"><span style="color:#24292E;">          let toastMessage = message</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (detail) {</span></span>
<span class="line"><span style="color:#24292E;">            toastMessage = message </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> errorText.join(</span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast(toastMessage, </span><span style="color:#032F62;">&#39;e&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        reject(status)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 判断变量是否空值</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> undefined, null, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;   &#39;</span><span style="color:#24292E;">, false, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, [], {} 均返回true，否则返回false</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function isEmpty(data: </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">): boolean {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isRef(data)) {</span></span>
<span class="line"><span style="color:#24292E;">    data = unref(data)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  switch (typeof data) {</span></span>
<span class="line"><span style="color:#24292E;">    case </span><span style="color:#032F62;">&#39;undefined&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> true</span></span>
<span class="line"><span style="color:#24292E;">    case </span><span style="color:#032F62;">&#39;string&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (data.trim().length </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> true</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span></span>
<span class="line"><span style="color:#24292E;">    case </span><span style="color:#032F62;">&#39;boolean&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">data) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> true</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span></span>
<span class="line"><span style="color:#24292E;">    case </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= data) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> true</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span></span>
<span class="line"><span style="color:#24292E;">    case </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (null </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= data) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> true</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (undefined </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">= data.length </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> data.length </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> true</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (var k </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> data) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> false</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> true</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> false</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 非空</span></span>
<span class="line"><span style="color:#24292E;">export function notEmpty(v: </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">): boolean {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">isEmpty(v)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">  将两个对象合并, 以第二个对象为准, 如果两个对象, 一个属性有值, 一个没值, 合并后有值; 如果两个属性都有值, 以第二个属性为准</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function merge(obj1: </span><span style="color:#005CC5;">object</span><span style="color:#24292E;">, obj2: </span><span style="color:#005CC5;">object</span><span style="color:#24292E;">): </span><span style="color:#005CC5;">object</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  let merged = { </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">obj1, </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">obj2 }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (let key </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> merged) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">isEmpty(obj1[key]) </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">isEmpty(obj2[key])) {</span></span>
<span class="line"><span style="color:#24292E;">      merged[key] = obj2[key]</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isEmpty(obj1[key]) </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">isEmpty(obj2[key])) {</span></span>
<span class="line"><span style="color:#24292E;">      merged[key] = obj2[key]</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">isEmpty(obj1[key]) </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> isEmpty(obj2[key])) {</span></span>
<span class="line"><span style="color:#24292E;">      merged[key] = obj1[key]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> merged</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 克隆数据并根据需要复制数组</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {</span><span style="color:#005CC5;">any</span><span style="color:#24292E;">} data </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 要克隆的数据</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {number} [times=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 如果是数组，要复制的次数</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">returns {</span><span style="color:#005CC5;">any</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 克隆后的数据或复制后的数组</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> clone(</span><span style="color:#005CC5;">123</span><span style="color:#24292E;">) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> clone([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, {name: </span><span style="color:#032F62;">&#39;andy&#39;</span><span style="color:#24292E;">}], </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, {name: </span><span style="color:#032F62;">&#39;andy&#39;</span><span style="color:#24292E;">}, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, {name: </span><span style="color:#032F62;">&#39;andy&#39;</span><span style="color:#24292E;">}]</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function clone(data, </span><span style="color:#E36209;">times</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isRef(data)) {</span></span>
<span class="line"><span style="color:#24292E;">    data = unref(data)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> Check </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> the data </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> an array</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (getType(data) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;array&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> If </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> an array, </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a deep clone of the data</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cloneDeep(data)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  const clonedData = cloneDeep(data)</span></span>
<span class="line"><span style="color:#24292E;">  const result = []</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (let i = </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> times; i</span><span style="color:#B31D28;font-style:italic;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    result.push(</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">clonedData)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 格式化时间为年月日时分秒的格式， 格式可以自定义。</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> ① 时间戳10位和13位都可以转换成格式化的日期</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> ② java8格式的日期和有效的日期都可以转换成定义的日期格式</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {Date, string}  都有默认参数</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">example</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> formatTime() </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2020</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">7</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">17</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">9</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">53</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">7</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> formatTime(</span><span style="color:#032F62;">&#39;2018-02-13T06:17&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2018</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">2</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">6</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">17</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">00</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> formatTime(</span><span style="color:#032F62;">&#39;2020/03/02 06:02&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2020</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">3</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">2</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">6</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">2</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">00</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> formatTime(</span><span style="color:#005CC5;">1541927611000</span><span style="color:#24292E;">); </span><span style="color:#D73A49;">//</span><span style="color:#005CC5;">2018</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">11</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">11</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">21</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> formatTime(</span><span style="color:#005CC5;">1541927611000</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{y}</span><span style="color:#032F62;">年</span><span style="color:#005CC5;">{m}</span><span style="color:#032F62;">月</span><span style="color:#005CC5;">{d}</span><span style="color:#032F62;">日 </span><span style="color:#005CC5;">{h}</span><span style="color:#032F62;">时</span><span style="color:#005CC5;">{m}</span><span style="color:#032F62;">分</span><span style="color:#005CC5;">{s}</span><span style="color:#032F62;">秒&quot;</span><span style="color:#24292E;">); </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">2018年11月11日</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">17时11分31秒</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> formatTime(</span><span style="color:#005CC5;">1541927611</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{y}</span><span style="color:#032F62;">/</span><span style="color:#005CC5;">{m}</span><span style="color:#032F62;">/</span><span style="color:#005CC5;">{d}</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">{h}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{m}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{s}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">); </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2018</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">11</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">11</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">31</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> formatTime(new Date()); </span><span style="color:#D73A49;">//</span><span style="color:#005CC5;">2018</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">11</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">11</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">21</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> formatTime(new Date().getTime()); </span><span style="color:#D73A49;">//</span><span style="color:#005CC5;">2018</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">11</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">11</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">21</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function formatTime(time, </span><span style="color:#E36209;">cFormat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">{y}</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">{m}</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">{d}</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">{h}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{i}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{s}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">time) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> time</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  let date</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (typeof time </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    date = time</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ((</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> time).length </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) time = parseInt(time) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span></span>
<span class="line"><span style="color:#24292E;">    date = new Date(time)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  const formatObj = {</span></span>
<span class="line"><span style="color:#24292E;">    y: date.getFullYear(),</span></span>
<span class="line"><span style="color:#24292E;">    m: date.getMonth() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    d: date.getDate(),</span></span>
<span class="line"><span style="color:#24292E;">    h: date.getHours(),</span></span>
<span class="line"><span style="color:#24292E;">    i: date.getMinutes(),</span></span>
<span class="line"><span style="color:#24292E;">    s: date.getSeconds(),</span></span>
<span class="line"><span style="color:#24292E;">    a: date.getDay(),</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  const time_str = cFormat.replace(</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">{(y</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">m</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">d</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">i</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">a)</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">}</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">g, (result, key) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    let value = formatObj[key] </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> Note: getDay() returns </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> on Sunday</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (key </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      return [</span><span style="color:#032F62;">&#39;日&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;一&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;二&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;三&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;四&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;五&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;六&#39;</span><span style="color:#24292E;">][value]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (result.length </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      value = </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> value</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> time_str</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 生成 </span><span style="color:#005CC5;">UUID</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {string} [</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 生成 </span><span style="color:#005CC5;">UUID</span><span style="color:#24292E;"> 的类型，可以是 </span><span style="color:#032F62;">&#39;phone&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;email&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;time&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;"> 或空字符串</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {number} [length=</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 生成字符串的长度</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {</span><span style="color:#005CC5;">object</span><span style="color:#24292E;">} [options={}] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 额外的选项</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {string} [options.emailStr=</span><span style="color:#032F62;">&#39;@qq.com&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 生成 email 时使用的后缀</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {string} [options.timeStr=</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">{m}</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">{d}</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">{h}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{i}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{s}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 生成时间字符串的格式</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {string} [options.startStr=</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 起始字符串</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {number</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">null} [options.optionsIndex=null] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 数组索引</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">returns {string</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">number} </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> 生成的 </span><span style="color:#005CC5;">UUID</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> uuid(</span><span style="color:#032F62;">&quot;名字&quot;</span><span style="color:#24292E;">) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> 名字hc8f</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> uuid() =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> abcd</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> uuid(</span><span style="color:#032F62;">&#39;time&#39;</span><span style="color:#24292E;">) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">25MR</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">27</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">34</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">1</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> uuid(</span><span style="color:#032F62;">&#39;time&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, {startStr:</span><span style="color:#032F62;">&#39;andy&#39;</span><span style="color:#24292E;">, timeStr:</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{h}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{i}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{s}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">}) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> andy </span><span style="color:#005CC5;">17</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">38</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">23</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> uuid(</span><span style="color:#032F62;">&#39;phone&#39;</span><span style="color:#24292E;">) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">13603312460</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> uuid(</span><span style="color:#032F62;">&#39;email&#39;</span><span style="color:#24292E;">) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> cBZA</span><span style="color:#D73A49;">@</span><span style="color:#24292E;">qq.com</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> uuid(</span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2319</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> uuid([ { label: </span><span style="color:#032F62;">&quot;小泽泽&quot;</span><span style="color:#24292E;">, value: </span><span style="color:#032F62;">&quot;xzz&quot;</span><span style="color:#24292E;"> },{ label: </span><span style="color:#032F62;">&quot;小月月&quot;</span><span style="color:#24292E;">, value: </span><span style="color:#032F62;">&quot;xyy&quot;</span><span style="color:#24292E;"> }]) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> xzz</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">export function uuid(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  { emailStr = </span><span style="color:#032F62;">&#39;@qq.com&#39;</span><span style="color:#24292E;">, timeStr = </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">{m}</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">{d}</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">{h}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{i}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{s}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">, startStr = </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">, optionsIndex = null } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {},</span></span>
<span class="line"><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  let randomStr = </span><span style="color:#032F62;">&#39;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&#39;</span></span>
<span class="line"><span style="color:#24292E;">  let res = </span><span style="color:#005CC5;">type</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isRef(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> = unref(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果传的第一个参数的数组， 说明是下拉框。 下拉框获取的是数组的第一项的值</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (getType(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;array&#39;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">.length </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    let randNum = random(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">.length </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果length传空, 说明数组里是基本数据类型, 那直接返回数组里的值</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">length) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> type[optionsIndex </span><span style="color:#B31D28;font-style:italic;">??</span><span style="color:#24292E;"> randNum]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 否则返回数组里对象里的值</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> type[optionsIndex </span><span style="color:#B31D28;font-style:italic;">??</span><span style="color:#24292E;"> randNum][length </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;value&#39;</span><span style="color:#24292E;"> : length]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果是手机号, 生成随机手机号</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;phone&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    let prefixArray = new Array(</span><span style="color:#032F62;">&#39;130&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;131&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;132&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;133&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;135&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;136&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;137&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;138&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;170&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;187&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;189&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    let i = parseInt(Math.random() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    let res = prefixArray[i]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (var j = </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">; j</span><span style="color:#B31D28;font-style:italic;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      res </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">= Math.floor(Math.random() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果是email, 生成随机email</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;email&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> uuid(startStr, length) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> emailStr</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果是时间, 生成时间字符串</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;time&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> uuid(startStr, length) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> formatTime(new Date(), timeStr)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果是数字, 生成除了0的随机数字</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    let randomStr = </span><span style="color:#032F62;">&#39;123456789&#39;</span></span>
<span class="line"><span style="color:#24292E;">    let res = </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (let i = length; i </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; </span><span style="color:#B31D28;font-style:italic;">--</span><span style="color:#24292E;">i) {</span></span>
<span class="line"><span style="color:#24292E;">      res </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">= randomStr[Math.floor(Math.random() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> randomStr.length)]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Number(res)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 生成随机字符串</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (let i = length; i </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; </span><span style="color:#B31D28;font-style:italic;">--</span><span style="color:#24292E;">i) {</span></span>
<span class="line"><span style="color:#24292E;">    res </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">= randomStr[Math.floor(Math.random() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> randomStr.length)]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 判断传入参数的类型</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param {</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">} </span><span style="color:#005CC5;">type</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> getType(new RegExp()) regexp</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> getType(new Date()) date</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> getType([]) array</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> getType({}) </span><span style="color:#005CC5;">object</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> getType(null) null</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> getType(</span><span style="color:#005CC5;">123</span><span style="color:#24292E;">) number</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function getType(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (typeof </span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    const objType = Object.prototype.toString.call(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">).slice(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">).toLowerCase()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> objType</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> typeof </span><span style="color:#005CC5;">type</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">export function sleep(</span><span style="color:#E36209;">delay</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, fn) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> new Promise((resolve) </span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    setTimeout(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      fn </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> fn()</span></span>
<span class="line"><span style="color:#24292E;">      resolve()</span></span>
<span class="line"><span style="color:#24292E;">    }, delay),</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">使用方式</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">. 在el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">form中使用</span></span>
<span class="line"><span style="color:#24292E;">name: [ proxy.validate(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">, { message: </span><span style="color:#032F62;">&#39;你干嘛哈哈&#39;</span><span style="color:#24292E;"> })],</span></span>
<span class="line"><span style="color:#24292E;">between: [ proxy.validate(</span><span style="color:#032F62;">&#39;between&#39;</span><span style="color:#24292E;">, { </span><span style="color:#005CC5;">max</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">99</span><span style="color:#24292E;"> })],</span></span>
<span class="line"><span style="color:#24292E;">number: [ proxy.validate(</span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">)],</span></span>
<span class="line"><span style="color:#24292E;">length: [proxy.validate(</span><span style="color:#032F62;">&#39;length&#39;</span><span style="color:#24292E;">)],</span></span>
<span class="line"><span style="color:#24292E;">phone: [ proxy.validate(</span><span style="color:#032F62;">&#39;phone&#39;</span><span style="color:#24292E;">)],</span></span>
<span class="line"><span style="color:#24292E;">custom: [proxy.validate(</span><span style="color:#032F62;">&#39;custom&#39;</span><span style="color:#24292E;">, { message: </span><span style="color:#032F62;">&#39;最多保留2位小数&#39;</span><span style="color:#24292E;">, reg: </span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">\\</span><span style="color:#B31D28;font-style:italic;">d+\\.?\\d{0,2}$/ })]</span></span>
<span class="line"><span style="color:#24292E;">confirmRegPwd: [</span></span>
<span class="line"><span style="color:#24292E;">  proxy.validate(</span><span style="color:#032F62;">&#39;same&#39;</span><span style="color:#24292E;">, { value: toRef(form.value, </span><span style="color:#032F62;">&#39;regPwd&#39;</span><span style="color:#24292E;">) }),</span></span>
<span class="line"><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">. 在函数中使用, 返回boolean</span></span>
<span class="line"><span style="color:#24292E;"> let ip = proxy.validate(</span><span style="color:#032F62;">&#39;ip&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">122322</span><span style="color:#24292E;">, true)</span></span>
<span class="line"><span style="color:#24292E;"> let custom = proxy.validate(</span><span style="color:#032F62;">&#39;custom&#39;</span><span style="color:#24292E;">, { value: </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">123</span><span style="color:#24292E;">, reg: </span><span style="color:#D73A49;">/^-</span><span style="color:#24292E;">\\</span><span style="color:#B31D28;font-style:italic;">d+\\.?\\d{0,2}$/ }, true)</span></span>
<span class="line"><span style="color:#D73A49;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">export function validate(</span><span style="color:#E36209;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;required&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rules</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}, </span><span style="color:#E36209;">pureValid</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> false) {</span></span>
<span class="line"><span style="color:#24292E;">  let trigger = rules.trigger </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;blur&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;change&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  const typeMaps = [</span><span style="color:#032F62;">&#39;required&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;pwd&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;mobile&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;between&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;same&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;length&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ip&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;port&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;custom&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果不包含typeMaps中的类型, 直接将第一个参数作为message</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">typeMaps.includes(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      required: true,</span></span>
<span class="line"><span style="color:#24292E;">      message: </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      trigger: trigger,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;required&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      required: true,</span></span>
<span class="line"><span style="color:#24292E;">      message: rules.message </span><span style="color:#B31D28;font-style:italic;">??</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;请输入 &#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      trigger: trigger,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> validator: this.validateName,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;pwd&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    const validateName = (rule, value, callback) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      let validFlag = </span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">(</span><span style="color:#B31D28;font-style:italic;">?!</span><span style="color:#24292E;">_)(</span><span style="color:#B31D28;font-style:italic;">?</span><span style="color:#24292E;">!.</span><span style="color:#D73A49;">*</span><span style="color:#B31D28;font-style:italic;">?</span><span style="color:#24292E;">_</span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">)[a</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">zA</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">Z0</span><span style="color:#D73A49;">-</span><span style="color:#B31D28;font-style:italic;">9_</span><span style="color:#24292E;">\\</span><span style="color:#B31D28;font-style:italic;">u4e00-\\u9fa5]+$/.test(value)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">validFlag) {</span></span>
<span class="line"><span style="color:#24292E;">        callback(new Error(rules.message </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;密码需由中文、英文、数字、下划线组成，且不能以下划线开头和结尾&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        callback()</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      validator: validateName,</span></span>
<span class="line"><span style="color:#24292E;">      trigger: trigger,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> _validValue(rules, </span><span style="color:#032F62;">&#39;请输入正整数&#39;</span><span style="color:#24292E;">, pureValid, </span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">+</span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;mobile&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> _validValue(rules, </span><span style="color:#032F62;">&#39;请输入正确的手机号&#39;</span><span style="color:#24292E;">, pureValid, </span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]{</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">}</span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;ip&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> _validValue(</span></span>
<span class="line"><span style="color:#24292E;">      rules,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;请输入正确的ip地址&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      pureValid,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">((</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">|</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#24292E;">]</span><span style="color:#B31D28;font-style:italic;">?</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]</span><span style="color:#B31D28;font-style:italic;">?</span><span style="color:#24292E;">)\\</span><span style="color:#B31D28;font-style:italic;">.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;port&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> _validValue(</span></span>
<span class="line"><span style="color:#24292E;">      rules,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;请输入1-65535的端口号&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      pureValid,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]{</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">}</span><span style="color:#D73A49;">|</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]{</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">}</span><span style="color:#D73A49;">|</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">])</span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;between&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    let </span><span style="color:#005CC5;">min</span><span style="color:#24292E;"> = rules.min </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    let </span><span style="color:#005CC5;">max</span><span style="color:#24292E;"> = rules.max </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">    const validateBetween = (rule, value, callback) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      let validFlag = </span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">+</span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">.test(value)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">validFlag) {</span></span>
<span class="line"><span style="color:#24292E;">        callback(new Error(</span><span style="color:#032F62;">&#39;请输入数字&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (value </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">min</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        callback(new Error(</span><span style="color:#B31D28;font-style:italic;">\`数字不能小于\${</span><span style="color:#005CC5;font-style:italic;">min</span><span style="color:#B31D28;font-style:italic;">}\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (value </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">max</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        callback(new Error(</span><span style="color:#B31D28;font-style:italic;">\`数字不能大于\${</span><span style="color:#005CC5;font-style:italic;">max</span><span style="color:#B31D28;font-style:italic;">}\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      callback()</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      validator: validateBetween,</span></span>
<span class="line"><span style="color:#24292E;">      trigger: trigger,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;same&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    const validateSame = (rule, value, callback) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      let isSame = value </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= rules.value.value</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">isSame) {</span></span>
<span class="line"><span style="color:#24292E;">        const errMessage = rules.message </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;密码和确认密码要一致&#39;</span></span>
<span class="line"><span style="color:#24292E;">        callback(new Error(errMessage))</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      callback()</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      validator: validateSame,</span></span>
<span class="line"><span style="color:#24292E;">      trigger: trigger,</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;custom&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">//</span><span style="color:#24292E;">  _validValue(rules, </span><span style="color:#032F62;">&#39;请输入正确的手机号&#39;</span><span style="color:#24292E;">, pureValid, </span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]{</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">}</span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pureValid) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> _validValue(rules.value, rules.message, pureValid, rules.reg)</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> _validValue(rules, rules.message, pureValid, rules.reg)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">function _validValue(rules, msg, pureValid, reg) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pureValid </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= true) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> reg.test(rules)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  const validatePhone = (rule, value, callback) =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.log(</span><span style="color:#B31D28;font-style:italic;">\`</span><span style="color:#005CC5;font-style:italic;">54</span><span style="color:#B31D28;font-style:italic;"> reg\`</span><span style="color:#24292E;">, reg)</span></span>
<span class="line"><span style="color:#24292E;">    let validFlag = reg.test(value)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">validFlag) {</span></span>
<span class="line"><span style="color:#24292E;">      callback(new Error(rules.message </span><span style="color:#B31D28;font-style:italic;">??</span><span style="color:#24292E;"> msg))</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      callback()</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    validator: validatePhone,</span></span>
<span class="line"><span style="color:#24292E;">    required: true,</span></span>
<span class="line"><span style="color:#24292E;">    trigger: rules.trigger </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;blur&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;change&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;">const { res, err } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> proxy.asyncWrapper(listTests, pickForm);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (err) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> function asyncWrapper(func, </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">args) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    const res = </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> func(</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">args)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> { res }</span></span>
<span class="line"><span style="color:#24292E;">  } catch (err) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> { err }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 获取assets静态资源</span></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> let </span><span style="color:#E36209;">src</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> proxy.formatImg(</span><span style="color:#032F62;">&#39;1.png&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">export function formatImg(photoName) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (photoName.startsWith(</span><span style="color:#032F62;">&#39;http&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> photoName</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (photoName.indexOf(</span><span style="color:#032F62;">&#39;.&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    photoName = photoName </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;.png&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> new URL(</span><span style="color:#B31D28;font-style:italic;">\`..</span><span style="color:#D73A49;font-style:italic;">/</span><span style="color:#B31D28;font-style:italic;">assets</span><span style="color:#D73A49;font-style:italic;">/</span><span style="color:#B31D28;font-style:italic;">images</span><span style="color:#D73A49;font-style:italic;">/</span><span style="color:#B31D28;font-style:italic;">\${photoName}\`</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">import</span><span style="color:#24292E;">.meta.url).href</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 复制文本</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> copy(</span><span style="color:#032F62;">&#39;这是要复制的文本&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> copy(</span><span style="color:#032F62;">&#39;这是要复制的文本&#39;</span><span style="color:#24292E;">, {duration: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export const </span><span style="color:#E36209;">copy</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (text, </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">toastParams) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  const textarea = document.createElement(</span><span style="color:#032F62;">&#39;textarea&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  textarea.value = text</span></span>
<span class="line"><span style="color:#24292E;">  textarea.style.position = </span><span style="color:#032F62;">&#39;fixed&#39;</span></span>
<span class="line"><span style="color:#24292E;">  document.body.appendChild(textarea)</span></span>
<span class="line"><span style="color:#24292E;">  textarea.select()</span></span>
<span class="line"><span style="color:#24292E;">  document.execCommand(</span><span style="color:#032F62;">&#39;copy&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  document.body.removeChild(textarea)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">toastParams.hideToast) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">$</span><span style="color:#24292E;">toast(text </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;复制成功&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">toastParams)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 给数字加千分位</span></span>
<span class="line"><span style="color:#24292E;">export function formatThousands(number) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 提取数字部分和单位部分</span></span>
<span class="line"><span style="color:#24292E;">  let matches = (</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> number).match(</span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">([\\</span><span style="color:#B31D28;font-style:italic;">d,]+)(\\D+)?$/)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">matches) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> number </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果没有找到匹配，则返回原始输入</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  let numericString = matches[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].replace(</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">\\</span><span style="color:#B31D28;font-style:italic;">D/g, &#39;&#39;) // 仅保留数字</span></span>
<span class="line"><span style="color:#24292E;">  let </span><span style="color:#E36209;">unit</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> matches[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">] </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 单位部分，如果没有则为空字符串</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 添加千位分隔符</span></span>
<span class="line"><span style="color:#24292E;">  let </span><span style="color:#E36209;">numberWithSeparator</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> numericString.replace(</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">\\</span><span style="color:#B31D28;font-style:italic;">B(?=(\\d{3})+(?!\\d))/g, &#39;,&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 拼接数字和单位，并返回结果</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> numberWithSeparator </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> unit</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/*</span></span>
<span class="line"><span style="color:#24292E;">const </span><span style="color:#E36209;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ref(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">proxy.log(</span><span style="color:#B31D28;font-style:italic;">\`</span><span style="color:#005CC5;font-style:italic;">str</span><span style="color:#B31D28;font-style:italic;">\`</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;5行 test/t3.vue&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function log(variableStr, variable, </span><span style="color:#E36209;">otherInfo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isRef(variable)) {</span></span>
<span class="line"><span style="color:#24292E;">    let unrefVariable = unref(variable)</span></span>
<span class="line"><span style="color:#24292E;">    _log(toRaw(unrefVariable))</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    _log(variable)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  function _log(consoleData) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (getType(consoleData) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> getType(consoleData) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;array&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      console.log(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#B31D28;font-style:italic;">\`</span><span style="color:#D73A49;font-style:italic;">%</span><span style="color:#B31D28;font-style:italic;">c\${variableStr} \${otherInfo}\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;background:#fff; color: blue;font-size: 1.2em&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.stringify(consoleData, null, </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">      )</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      console.log(</span><span style="color:#B31D28;font-style:italic;">\`</span><span style="color:#D73A49;font-style:italic;">%</span><span style="color:#B31D28;font-style:italic;">c\${variableStr} \${otherInfo}\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;background:#fff; color: blue;font-size: 1.2em&#39;</span><span style="color:#24292E;">, consoleData)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  function getType(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (typeof </span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      const objType = Object.prototype.toString.call(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;">).slice(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">).toLowerCase()</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> objType</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> typeof </span><span style="color:#005CC5;">type</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 生成指定范围内的随机整数</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param </span><span style="color:#005CC5;">min</span><span style="color:#24292E;"> 最小值，默认为0</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param </span><span style="color:#005CC5;">max</span><span style="color:#24292E;"> 最大值，默认为10</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">returns 返回生成的随机整数</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function random(</span><span style="color:#E36209;">min</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#E36209;">max</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Math.floor(Math.random() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">max</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">min</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">min</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 将文本转换为带有连接符的行文本</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param text 要转换的文本</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">param connect 连接符，默认为</span><span style="color:#032F62;">&#39;-&#39;</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">@</span><span style="color:#24292E;">returns 返回转换后的行文本</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> toLine(</span><span style="color:#032F62;">&#39;NameAndy&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">andy</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> toLine(</span><span style="color:#032F62;">&#39;nameAndy&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">andy</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> toLine(</span><span style="color:#032F62;">&#39;_nameAndy&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> _name</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">andy</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function toLine(text, </span><span style="color:#E36209;">connect</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;-&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  let translateText = text</span></span>
<span class="line"><span style="color:#24292E;">    .replace(</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">([A</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">Z])</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">g, (match, p1, offset, origin) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (offset </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">\`\${match.toLocaleLowerCase()}\`</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">\`\${connect}\${match.toLocaleLowerCase()}\`</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">    .toLocaleLowerCase()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> translateText</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> console.log(processWidth(</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> { width: </span><span style="color:#032F62;">&#39;200px&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> console.log(processWidth(</span><span style="color:#032F62;">&#39;200&#39;</span><span style="color:#24292E;">, true)) </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">200px</span></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> console.log(processWidth(</span><span style="color:#032F62;">&#39;200.33px&#39;</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> { width: </span><span style="color:#032F62;">&#39;200.33px&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#D73A49;">//</span><span style="color:#24292E;"> console.log(processWidth(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;">export function processWidth(initValue, </span><span style="color:#E36209;">isBase</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> false) {</span></span>
<span class="line"><span style="color:#24292E;">  let value = unref(initValue)</span></span>
<span class="line"><span style="color:#24292E;">  let res = </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">value) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> isBase </span><span style="color:#B31D28;font-style:italic;">?</span><span style="color:#24292E;"> value : {}</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (typeof value </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;number&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    value = String(value)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (value </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> isBase </span><span style="color:#B31D28;font-style:italic;">?</span><span style="color:#24292E;"> value : {}</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (typeof value </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;string&#39;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">isNaN(value)) {</span></span>
<span class="line"><span style="color:#24292E;">    res = value </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;px&#39;</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (typeof value </span><span style="color:#D73A49;">==</span><span style="color:#24292E;">= </span><span style="color:#032F62;">&#39;string&#39;</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">(\\</span><span style="color:#B31D28;font-style:italic;">.[0-9]+)?(px|%|em|rem|vw|vh|ch)*$/.test(value)) {</span></span>
<span class="line"><span style="color:#24292E;">    res = value</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.warn(</span><span style="color:#B31D28;font-style:italic;">\`\${value} </span><span style="color:#D73A49;font-style:italic;">is</span><span style="color:#B31D28;font-style:italic;"> Invalid unit provided\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isBase) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> { width: res }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 只有对正整数或者字符串正整数才进行单位的转换,</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 否则返回原始数据</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function formatBytes(</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isStringNumber(</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">) </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> isNumber(</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;"> = Number(</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bytes</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bytes</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  const k = </span><span style="color:#005CC5;">1024</span></span>
<span class="line"><span style="color:#24292E;">  const sizes = [</span><span style="color:#032F62;">&#39;B&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;KB&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;MB&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;GB&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;TB&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;PB&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;EB&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ZB&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;YB&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  const i = Math.floor(Math.log(</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> Math.log(k))</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> parseFloat((</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> Math.pow(k, i)).toFixed(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> sizes[i]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">export function formatBytesConvert(</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isStringNumber(</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">) </span><span style="color:#B31D28;font-style:italic;">||</span><span style="color:#24292E;"> isNumber(</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bytes</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bytes</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  const bytesRegex = </span><span style="color:#D73A49;">/^</span><span style="color:#24292E;">(\\</span><span style="color:#B31D28;font-style:italic;">d+(?:\\.\\d+)?)\\s*([BKMGTPEZY]?B)$/i</span></span>
<span class="line"><span style="color:#24292E;">  const units = {</span></span>
<span class="line"><span style="color:#24292E;">    B: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">KB</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">MB</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">**</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">GB</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">**</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">TB</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">**</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">PB</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">**</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">EB</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">**</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">ZB</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">**</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">YB</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">**</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  const match = </span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;">.match(bytesRegex)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">match) {</span></span>
<span class="line"><span style="color:#24292E;">    console.warn(</span><span style="color:#032F62;">&quot;Invalid bytes format. Please provide a valid bytes string, like &#39;100GB&#39;.&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  const size = parseFloat(match[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">  const unit = match[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">].toUpperCase()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#24292E;">units.hasOwnProperty(unit)) {</span></span>
<span class="line"><span style="color:#24292E;">    console.warn(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;Invalid bytes unit. Please provide a valid unit, like &#39;B&#39;, &#39;KB&#39;, &#39;MB&#39;, &#39;GB&#39;, &#39;TB&#39;, &#39;PB&#39;, &#39;EB&#39;, &#39;ZB&#39;, or &#39;YB&#39;.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> size </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> units[unit]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">export function throttle(fn, </span><span style="color:#E36209;">delay</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> last为上一次触发毁掉的时间，timer是定时器</span></span>
<span class="line"><span style="color:#24292E;">  let last = </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  let timer = null</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 将throttle处理结果当做函数返回</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> function () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 保留调用时的this上下文</span></span>
<span class="line"><span style="color:#24292E;">    let context = this</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 保留调用时传入的参数</span></span>
<span class="line"><span style="color:#24292E;">    let args = arguments</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 记录本次触发回调的时间</span></span>
<span class="line"><span style="color:#24292E;">    let now = </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">new Date()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 判断上次触发的时间和本次触发的时间差是否小于时间间隔的阈值</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (now </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> last </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> delay) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果时间间隔小于设定的时间间隔阈值,则为本次触发操作设立一个新的定时器</span></span>
<span class="line"><span style="color:#24292E;">      clearTimeout(timer)</span></span>
<span class="line"><span style="color:#24292E;">      timer = setTimeout(function () {</span></span>
<span class="line"><span style="color:#24292E;">        last = now</span></span>
<span class="line"><span style="color:#24292E;">        fn.apply(context, args)</span></span>
<span class="line"><span style="color:#24292E;">      }, delay)</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> 如果时间间隔超出了设定的时间间隔阈值，那就不等了，无论如何要反馈给用户一次响应</span></span>
<span class="line"><span style="color:#24292E;">      last = now</span></span>
<span class="line"><span style="color:#24292E;">      fn.apply(context, args)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">export function debounce(fn, </span><span style="color:#E36209;">delay</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  let timer = null</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> function () {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (timer) {</span></span>
<span class="line"><span style="color:#24292E;">      clearTimeout(timer)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    timer = setTimeout(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      fn.apply(this, arguments)</span></span>
<span class="line"><span style="color:#24292E;">      timer = null</span></span>
<span class="line"><span style="color:#24292E;">    }, delay)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/**</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> proxy.confirm(</span><span style="color:#032F62;">&#39;内容&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> proxy.confirm(</span><span style="color:#032F62;">&#39;哈哈&#39;</span><span style="color:#24292E;">, { icon: </span><span style="color:#032F62;">&#39;el-icon-plus&#39;</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> close</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">on</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">click</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">modal: 是否可通过点击遮罩层关闭 MessageBox 默认true</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> lock</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">scroll: 是否在 MessageBox 出现时将 body 滚动锁定. 默认true</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">*/</span></span>
<span class="line"><span style="color:#24292E;">export function confirm(message, options) {</span></span>
<span class="line"><span style="color:#24292E;">  const baseOptions = {</span></span>
<span class="line"><span style="color:#24292E;">    title: </span><span style="color:#032F62;">&#39;提示&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    draggable: true,</span></span>
<span class="line"><span style="color:#24292E;">    showCancelButton: false,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  let mergeOptions = Object.assign({}, baseOptions, options)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> new Promise((r, j) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    ElMessageBox.confirm(message, mergeOptions)</span></span>
<span class="line"><span style="color:#24292E;">      .then(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        r()</span></span>
<span class="line"><span style="color:#24292E;">      })</span></span>
<span class="line"><span style="color:#24292E;">      .catch(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        j()</span></span>
<span class="line"><span style="color:#24292E;">      })</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br><span class="line-number">320</span><br><span class="line-number">321</span><br><span class="line-number">322</span><br><span class="line-number">323</span><br><span class="line-number">324</span><br><span class="line-number">325</span><br><span class="line-number">326</span><br><span class="line-number">327</span><br><span class="line-number">328</span><br><span class="line-number">329</span><br><span class="line-number">330</span><br><span class="line-number">331</span><br><span class="line-number">332</span><br><span class="line-number">333</span><br><span class="line-number">334</span><br><span class="line-number">335</span><br><span class="line-number">336</span><br><span class="line-number">337</span><br><span class="line-number">338</span><br><span class="line-number">339</span><br><span class="line-number">340</span><br><span class="line-number">341</span><br><span class="line-number">342</span><br><span class="line-number">343</span><br><span class="line-number">344</span><br><span class="line-number">345</span><br><span class="line-number">346</span><br><span class="line-number">347</span><br><span class="line-number">348</span><br><span class="line-number">349</span><br><span class="line-number">350</span><br><span class="line-number">351</span><br><span class="line-number">352</span><br><span class="line-number">353</span><br><span class="line-number">354</span><br><span class="line-number">355</span><br><span class="line-number">356</span><br><span class="line-number">357</span><br><span class="line-number">358</span><br><span class="line-number">359</span><br><span class="line-number">360</span><br><span class="line-number">361</span><br><span class="line-number">362</span><br><span class="line-number">363</span><br><span class="line-number">364</span><br><span class="line-number">365</span><br><span class="line-number">366</span><br><span class="line-number">367</span><br><span class="line-number">368</span><br><span class="line-number">369</span><br><span class="line-number">370</span><br><span class="line-number">371</span><br><span class="line-number">372</span><br><span class="line-number">373</span><br><span class="line-number">374</span><br><span class="line-number">375</span><br><span class="line-number">376</span><br><span class="line-number">377</span><br><span class="line-number">378</span><br><span class="line-number">379</span><br><span class="line-number">380</span><br><span class="line-number">381</span><br><span class="line-number">382</span><br><span class="line-number">383</span><br><span class="line-number">384</span><br><span class="line-number">385</span><br><span class="line-number">386</span><br><span class="line-number">387</span><br><span class="line-number">388</span><br><span class="line-number">389</span><br><span class="line-number">390</span><br><span class="line-number">391</span><br><span class="line-number">392</span><br><span class="line-number">393</span><br><span class="line-number">394</span><br><span class="line-number">395</span><br><span class="line-number">396</span><br><span class="line-number">397</span><br><span class="line-number">398</span><br><span class="line-number">399</span><br><span class="line-number">400</span><br><span class="line-number">401</span><br><span class="line-number">402</span><br><span class="line-number">403</span><br><span class="line-number">404</span><br><span class="line-number">405</span><br><span class="line-number">406</span><br><span class="line-number">407</span><br><span class="line-number">408</span><br><span class="line-number">409</span><br><span class="line-number">410</span><br><span class="line-number">411</span><br><span class="line-number">412</span><br><span class="line-number">413</span><br><span class="line-number">414</span><br><span class="line-number">415</span><br><span class="line-number">416</span><br><span class="line-number">417</span><br><span class="line-number">418</span><br><span class="line-number">419</span><br><span class="line-number">420</span><br><span class="line-number">421</span><br><span class="line-number">422</span><br><span class="line-number">423</span><br><span class="line-number">424</span><br><span class="line-number">425</span><br><span class="line-number">426</span><br><span class="line-number">427</span><br><span class="line-number">428</span><br><span class="line-number">429</span><br><span class="line-number">430</span><br><span class="line-number">431</span><br><span class="line-number">432</span><br><span class="line-number">433</span><br><span class="line-number">434</span><br><span class="line-number">435</span><br><span class="line-number">436</span><br><span class="line-number">437</span><br><span class="line-number">438</span><br><span class="line-number">439</span><br><span class="line-number">440</span><br><span class="line-number">441</span><br><span class="line-number">442</span><br><span class="line-number">443</span><br><span class="line-number">444</span><br><span class="line-number">445</span><br><span class="line-number">446</span><br><span class="line-number">447</span><br><span class="line-number">448</span><br><span class="line-number">449</span><br><span class="line-number">450</span><br><span class="line-number">451</span><br><span class="line-number">452</span><br><span class="line-number">453</span><br><span class="line-number">454</span><br><span class="line-number">455</span><br><span class="line-number">456</span><br><span class="line-number">457</span><br><span class="line-number">458</span><br><span class="line-number">459</span><br><span class="line-number">460</span><br><span class="line-number">461</span><br><span class="line-number">462</span><br><span class="line-number">463</span><br><span class="line-number">464</span><br><span class="line-number">465</span><br><span class="line-number">466</span><br><span class="line-number">467</span><br><span class="line-number">468</span><br><span class="line-number">469</span><br><span class="line-number">470</span><br><span class="line-number">471</span><br><span class="line-number">472</span><br><span class="line-number">473</span><br><span class="line-number">474</span><br><span class="line-number">475</span><br><span class="line-number">476</span><br><span class="line-number">477</span><br><span class="line-number">478</span><br><span class="line-number">479</span><br><span class="line-number">480</span><br><span class="line-number">481</span><br><span class="line-number">482</span><br><span class="line-number">483</span><br><span class="line-number">484</span><br><span class="line-number">485</span><br><span class="line-number">486</span><br><span class="line-number">487</span><br><span class="line-number">488</span><br><span class="line-number">489</span><br><span class="line-number">490</span><br><span class="line-number">491</span><br><span class="line-number">492</span><br><span class="line-number">493</span><br><span class="line-number">494</span><br><span class="line-number">495</span><br><span class="line-number">496</span><br><span class="line-number">497</span><br><span class="line-number">498</span><br><span class="line-number">499</span><br><span class="line-number">500</span><br><span class="line-number">501</span><br><span class="line-number">502</span><br><span class="line-number">503</span><br><span class="line-number">504</span><br><span class="line-number">505</span><br><span class="line-number">506</span><br><span class="line-number">507</span><br><span class="line-number">508</span><br><span class="line-number">509</span><br><span class="line-number">510</span><br><span class="line-number">511</span><br><span class="line-number">512</span><br><span class="line-number">513</span><br><span class="line-number">514</span><br><span class="line-number">515</span><br><span class="line-number">516</span><br><span class="line-number">517</span><br><span class="line-number">518</span><br><span class="line-number">519</span><br><span class="line-number">520</span><br><span class="line-number">521</span><br><span class="line-number">522</span><br><span class="line-number">523</span><br><span class="line-number">524</span><br><span class="line-number">525</span><br><span class="line-number">526</span><br><span class="line-number">527</span><br><span class="line-number">528</span><br><span class="line-number">529</span><br><span class="line-number">530</span><br><span class="line-number">531</span><br><span class="line-number">532</span><br><span class="line-number">533</span><br><span class="line-number">534</span><br><span class="line-number">535</span><br><span class="line-number">536</span><br><span class="line-number">537</span><br><span class="line-number">538</span><br><span class="line-number">539</span><br><span class="line-number">540</span><br><span class="line-number">541</span><br><span class="line-number">542</span><br><span class="line-number">543</span><br><span class="line-number">544</span><br><span class="line-number">545</span><br><span class="line-number">546</span><br><span class="line-number">547</span><br><span class="line-number">548</span><br><span class="line-number">549</span><br><span class="line-number">550</span><br><span class="line-number">551</span><br><span class="line-number">552</span><br><span class="line-number">553</span><br><span class="line-number">554</span><br><span class="line-number">555</span><br><span class="line-number">556</span><br><span class="line-number">557</span><br><span class="line-number">558</span><br><span class="line-number">559</span><br><span class="line-number">560</span><br><span class="line-number">561</span><br><span class="line-number">562</span><br><span class="line-number">563</span><br><span class="line-number">564</span><br><span class="line-number">565</span><br><span class="line-number">566</span><br><span class="line-number">567</span><br><span class="line-number">568</span><br><span class="line-number">569</span><br><span class="line-number">570</span><br><span class="line-number">571</span><br><span class="line-number">572</span><br><span class="line-number">573</span><br><span class="line-number">574</span><br><span class="line-number">575</span><br><span class="line-number">576</span><br><span class="line-number">577</span><br><span class="line-number">578</span><br><span class="line-number">579</span><br><span class="line-number">580</span><br><span class="line-number">581</span><br><span class="line-number">582</span><br><span class="line-number">583</span><br><span class="line-number">584</span><br><span class="line-number">585</span><br><span class="line-number">586</span><br><span class="line-number">587</span><br><span class="line-number">588</span><br><span class="line-number">589</span><br><span class="line-number">590</span><br><span class="line-number">591</span><br><span class="line-number">592</span><br><span class="line-number">593</span><br><span class="line-number">594</span><br><span class="line-number">595</span><br><span class="line-number">596</span><br><span class="line-number">597</span><br><span class="line-number">598</span><br><span class="line-number">599</span><br><span class="line-number">600</span><br><span class="line-number">601</span><br><span class="line-number">602</span><br><span class="line-number">603</span><br><span class="line-number">604</span><br><span class="line-number">605</span><br><span class="line-number">606</span><br><span class="line-number">607</span><br><span class="line-number">608</span><br><span class="line-number">609</span><br><span class="line-number">610</span><br><span class="line-number">611</span><br><span class="line-number">612</span><br><span class="line-number">613</span><br><span class="line-number">614</span><br><span class="line-number">615</span><br><span class="line-number">616</span><br><span class="line-number">617</span><br><span class="line-number">618</span><br><span class="line-number">619</span><br><span class="line-number">620</span><br><span class="line-number">621</span><br><span class="line-number">622</span><br><span class="line-number">623</span><br><span class="line-number">624</span><br><span class="line-number">625</span><br><span class="line-number">626</span><br><span class="line-number">627</span><br><span class="line-number">628</span><br><span class="line-number">629</span><br><span class="line-number">630</span><br><span class="line-number">631</span><br><span class="line-number">632</span><br><span class="line-number">633</span><br><span class="line-number">634</span><br><span class="line-number">635</span><br><span class="line-number">636</span><br><span class="line-number">637</span><br><span class="line-number">638</span><br><span class="line-number">639</span><br><span class="line-number">640</span><br><span class="line-number">641</span><br><span class="line-number">642</span><br><span class="line-number">643</span><br><span class="line-number">644</span><br><span class="line-number">645</span><br><span class="line-number">646</span><br><span class="line-number">647</span><br><span class="line-number">648</span><br><span class="line-number">649</span><br><span class="line-number">650</span><br><span class="line-number">651</span><br><span class="line-number">652</span><br><span class="line-number">653</span><br><span class="line-number">654</span><br><span class="line-number">655</span><br><span class="line-number">656</span><br><span class="line-number">657</span><br><span class="line-number">658</span><br><span class="line-number">659</span><br><span class="line-number">660</span><br><span class="line-number">661</span><br><span class="line-number">662</span><br><span class="line-number">663</span><br><span class="line-number">664</span><br><span class="line-number">665</span><br><span class="line-number">666</span><br><span class="line-number">667</span><br><span class="line-number">668</span><br><span class="line-number">669</span><br><span class="line-number">670</span><br><span class="line-number">671</span><br><span class="line-number">672</span><br><span class="line-number">673</span><br><span class="line-number">674</span><br><span class="line-number">675</span><br><span class="line-number">676</span><br><span class="line-number">677</span><br><span class="line-number">678</span><br><span class="line-number">679</span><br><span class="line-number">680</span><br><span class="line-number">681</span><br><span class="line-number">682</span><br><span class="line-number">683</span><br><span class="line-number">684</span><br><span class="line-number">685</span><br><span class="line-number">686</span><br><span class="line-number">687</span><br><span class="line-number">688</span><br><span class="line-number">689</span><br><span class="line-number">690</span><br><span class="line-number">691</span><br><span class="line-number">692</span><br><span class="line-number">693</span><br><span class="line-number">694</span><br><span class="line-number">695</span><br><span class="line-number">696</span><br><span class="line-number">697</span><br><span class="line-number">698</span><br><span class="line-number">699</span><br><span class="line-number">700</span><br><span class="line-number">701</span><br><span class="line-number">702</span><br><span class="line-number">703</span><br><span class="line-number">704</span><br><span class="line-number">705</span><br><span class="line-number">706</span><br><span class="line-number">707</span><br><span class="line-number">708</span><br><span class="line-number">709</span><br><span class="line-number">710</span><br><span class="line-number">711</span><br><span class="line-number">712</span><br><span class="line-number">713</span><br><span class="line-number">714</span><br><span class="line-number">715</span><br><span class="line-number">716</span><br><span class="line-number">717</span><br><span class="line-number">718</span><br><span class="line-number">719</span><br><span class="line-number">720</span><br><span class="line-number">721</span><br><span class="line-number">722</span><br><span class="line-number">723</span><br><span class="line-number">724</span><br><span class="line-number">725</span><br><span class="line-number">726</span><br><span class="line-number">727</span><br><span class="line-number">728</span><br><span class="line-number">729</span><br><span class="line-number">730</span><br><span class="line-number">731</span><br><span class="line-number">732</span><br><span class="line-number">733</span><br><span class="line-number">734</span><br><span class="line-number">735</span><br><span class="line-number">736</span><br><span class="line-number">737</span><br><span class="line-number">738</span><br><span class="line-number">739</span><br><span class="line-number">740</span><br><span class="line-number">741</span><br><span class="line-number">742</span><br><span class="line-number">743</span><br><span class="line-number">744</span><br><span class="line-number">745</span><br><span class="line-number">746</span><br><span class="line-number">747</span><br><span class="line-number">748</span><br><span class="line-number">749</span><br><span class="line-number">750</span><br><span class="line-number">751</span><br><span class="line-number">752</span><br><span class="line-number">753</span><br><span class="line-number">754</span><br><span class="line-number">755</span><br><span class="line-number">756</span><br><span class="line-number">757</span><br><span class="line-number">758</span><br><span class="line-number">759</span><br><span class="line-number">760</span><br><span class="line-number">761</span><br><span class="line-number">762</span><br><span class="line-number">763</span><br><span class="line-number">764</span><br><span class="line-number">765</span><br><span class="line-number">766</span><br><span class="line-number">767</span><br><span class="line-number">768</span><br><span class="line-number">769</span><br><span class="line-number">770</span><br><span class="line-number">771</span><br><span class="line-number">772</span><br><span class="line-number">773</span><br><span class="line-number">774</span><br><span class="line-number">775</span><br><span class="line-number">776</span><br><span class="line-number">777</span><br><span class="line-number">778</span><br><span class="line-number">779</span><br><span class="line-number">780</span><br><span class="line-number">781</span><br><span class="line-number">782</span><br><span class="line-number">783</span><br><span class="line-number">784</span><br><span class="line-number">785</span><br><span class="line-number">786</span><br><span class="line-number">787</span><br><span class="line-number">788</span><br><span class="line-number">789</span><br><span class="line-number">790</span><br><span class="line-number">791</span><br><span class="line-number">792</span><br><span class="line-number">793</span><br><span class="line-number">794</span><br><span class="line-number">795</span><br><span class="line-number">796</span><br><span class="line-number">797</span><br><span class="line-number">798</span><br><span class="line-number">799</span><br><span class="line-number">800</span><br><span class="line-number">801</span><br><span class="line-number">802</span><br><span class="line-number">803</span><br><span class="line-number">804</span><br><span class="line-number">805</span><br><span class="line-number">806</span><br><span class="line-number">807</span><br><span class="line-number">808</span><br><span class="line-number">809</span><br><span class="line-number">810</span><br><span class="line-number">811</span><br></div></div>`,1)],b=s(p,[["render",function(e,r,c,t,E,y){return n(),a("div",null,o)}]]);export{F as __pageData,b as default};
